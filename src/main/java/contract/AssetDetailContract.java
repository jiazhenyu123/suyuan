package contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class AssetDetailContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50611f4b806100296000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063465c41051161005b578063465c4105146100f0578063487daf02146101205780634cd446ea14610150578063cd17ba571461016c5761007d565b80630811251a146100825780632e5f4451146100a057806335e43c20146100d4575b600080fd5b61008a61019c565b604051610097919061142d565b60405180910390f35b6100ba60048036038101906100b59190611598565b61039a565b6040516100cb95949392919061163a565b60405180910390f35b6100ee60048036038101906100e991906117b8565b61057e565b005b61010a60048036038101906101059190611801565b6106be565b6040516101179190611894565b60405180910390f35b61013a60048036038101906101359190611598565b61079b565b60405161014791906119f5565b60405180910390f35b61016a60048036038101906101659190611afd565b610be3565b005b61018660048036038101906101819190611b46565b610d93565b60405161019391906119f5565b60405180910390f35b6101a4611225565b60006040516101b290611bf9565b90815260200160405180910390206040518060a00160405290816000820180546101db90611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461020790611c3d565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050815260200160018201805461026d90611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461029990611c3d565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b505050505081526020016002820180546102ff90611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611c3d565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050815260200160038201548152602001600482015481525050905090565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546103d390611c3d565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff90611c3d565b801561044c5780601f106104215761010080835404028352916020019161044c565b820191906000526020600020905b81548152906001019060200180831161042f57829003601f168201915b50505050509080600101805461046190611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90611c3d565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b5050505050908060020180546104ef90611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461051b90611c3d565b80156105685780601f1061053d57610100808354040283529160200191610568565b820191906000526020600020905b81548152906001019060200180831161054b57829003601f168201915b5050505050908060030154908060040154905085565b600181600001516040516105929190611ca0565b908152602001604051809103902060009054906101000a900460ff16156106815780600082600001516040516105c89190611ca0565b908152602001604051809103902060008201518160000190805190602001906105f2929190611254565b50602082015181600101908051906020019061060f929190611254565b50604082015181600201908051906020019061062c929190611254565b5060608201518160030155608082015181600401559050507f1f0b7755550dd48676926d868a91257934b9a64d5f852cad45e85274c052c6b060c86040516106749190611cfc565b60405180910390a16106bb565b7f1f0b7755550dd48676926d868a91257934b9a64d5f852cad45e85274c052c6b06127116040516106b29190611d52565b60405180910390a15b50565b600080839050600083905080518251146106dd57600092505050610795565b60005b825181101561078d578181815181106106fc576106fb611d6d565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191683828151811061073c5761073b611d6d565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461077a5760009350505050610795565b808061078590611dcb565b9150506106e0565b506001925050505b92915050565b60606000603267ffffffffffffffff8111156107ba576107b961146d565b5b6040519080825280602002602001820160405280156107f357816020015b6107e0611225565b8152602001906001900390816107d85790505b5090506000805b600354811015610b27576108d460006002838154811061081d5761081c611d6d565b5b906000526020600020016040516108349190611ea8565b9081526020016040518091039020600201805461085090611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461087c90611c3d565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b5050505050866106be565b15610b14576000600282815481106108ef576108ee611d6d565b5b906000526020600020016040516109069190611ea8565b90815260200160405180910390206040518060a001604052908160008201805461092f90611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461095b90611c3d565b80156109a85780601f1061097d576101008083540402835291602001916109a8565b820191906000526020600020905b81548152906001019060200180831161098b57829003601f168201915b505050505081526020016001820180546109c190611c3d565b80601f01602080910402602001604051908101604052809291908181526020018280546109ed90611c3d565b8015610a3a5780601f10610a0f57610100808354040283529160200191610a3a565b820191906000526020600020905b815481529060010190602001808311610a1d57829003601f168201915b50505050508152602001600282018054610a5390611c3d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7f90611c3d565b8015610acc5780601f10610aa157610100808354040283529160200191610acc565b820191906000526020600020905b815481529060010190602001808311610aaf57829003601f168201915b5050505050815260200160038201548152602001600482015481525050838380610af590611dcb565b945081518110610b0857610b07611d6d565b5b60200260200101819052505b8080610b1f90611dcb565b9150506107fa565b5060008167ffffffffffffffff811115610b4457610b4361146d565b5b604051908082528060200260200182016040528015610b7d57816020015b610b6a611225565b815260200190600190039081610b625790505b50905060005b82811015610bd757838181518110610b9e57610b9d611d6d565b5b6020026020010151828281518110610bb957610bb8611d6d565b5b60200260200101819052508080610bcf90611dcb565b915050610b83565b50809350505050919050565b606060005b8251811015610d8e57828181518110610c0457610c03611d6d565b5b6020026020010151600001519150600182604051610c229190611ca0565b908152602001604051809103902060009054906101000a900460ff16610d7557828181518110610c5557610c54611d6d565b5b6020026020010151600083604051610c6d9190611ca0565b90815260200160405180910390206000820151816000019080519060200190610c97929190611254565b506020820151816001019080519060200190610cb4929190611254565b506040820151816002019080519060200190610cd1929190611254565b50606082015181600301556080820151816004015590505060018083604051610cfa9190611ca0565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600282908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610d5a929190611254565b506001600354610d6a9190611ebf565b600381905550610d7a565b610d7b565b5b8080610d8690611dcb565b915050610be8565b505050565b60606000603267ffffffffffffffff811115610db257610db161146d565b5b604051908082528060200260200182016040528015610deb57816020015b610dd8611225565b815260200190600190039081610dd05790505b5090506000805b60035481101561116857610ecc600060028381548110610e1557610e14611d6d565b5b90600052602060002001604051610e2c9190611ea8565b90815260200160405180910390206002018054610e4890611c3d565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7490611c3d565b8015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b5050505050876106be565b8015610f15575084600060028381548110610eea57610ee9611d6d565b5b90600052602060002001604051610f019190611ea8565b908152602001604051809103902060030154145b1561115557600060028281548110610f3057610f2f611d6d565b5b90600052602060002001604051610f479190611ea8565b90815260200160405180910390206040518060a0016040529081600082018054610f7090611c3d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9c90611c3d565b8015610fe95780601f10610fbe57610100808354040283529160200191610fe9565b820191906000526020600020905b815481529060010190602001808311610fcc57829003601f168201915b5050505050815260200160018201805461100290611c3d565b80601f016020809104026020016040519081016040528092919081815260200182805461102e90611c3d565b801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b5050505050815260200160028201805461109490611c3d565b80601f01602080910402602001604051908101604052809291908181526020018280546110c090611c3d565b801561110d5780601f106110e25761010080835404028352916020019161110d565b820191906000526020600020905b8154815290600101906020018083116110f057829003601f168201915b505050505081526020016003820154815260200160048201548152505083838061113690611dcb565b94508151811061114957611148611d6d565b5b60200260200101819052505b808061116090611dcb565b915050610df2565b5060008167ffffffffffffffff8111156111855761118461146d565b5b6040519080825280602002602001820160405280156111be57816020015b6111ab611225565b8152602001906001900390816111a35790505b50905060005b82811015611218578381815181106111df576111de611d6d565b5b60200260200101518282815181106111fa576111f9611d6d565b5b6020026020010181905250808061121090611dcb565b9150506111c4565b5080935050505092915050565b6040518060a0016040528060608152602001606081526020016060815260200160008152602001600081525090565b82805461126090611c3d565b90600052602060002090601f01602090048101928261128257600085556112c9565b82601f1061129b57805160ff19168380011785556112c9565b828001600101855582156112c9579182015b828111156112c85782518255916020019190600101906112ad565b5b5090506112d691906112da565b5090565b5b808211156112f35760008160009055506001016112db565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015611331578082015181840152602081019050611316565b83811115611340576000848401525b50505050565b6000601f19601f8301169050919050565b6000611362826112f7565b61136c8185611302565b935061137c818560208601611313565b61138581611346565b840191505092915050565b6000819050919050565b6113a381611390565b82525050565b600060a08301600083015184820360008601526113c68282611357565b915050602083015184820360208601526113e08282611357565b915050604083015184820360408601526113fa8282611357565b915050606083015161140f606086018261139a565b506080830151611422608086018261139a565b508091505092915050565b6000602082019050818103600083015261144781846113a9565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114a582611346565b810181811067ffffffffffffffff821117156114c4576114c361146d565b5b80604052505050565b60006114d761144f565b90506114e3828261149c565b919050565b600067ffffffffffffffff8211156115035761150261146d565b5b61150c82611346565b9050602081019050919050565b82818337600083830152505050565b600061153b611536846114e8565b6114cd565b90508281526020810184848401111561155757611556611468565b5b611562848285611519565b509392505050565b600082601f83011261157f5761157e611463565b5b813561158f848260208601611528565b91505092915050565b6000602082840312156115ae576115ad611459565b5b600082013567ffffffffffffffff8111156115cc576115cb61145e565b5b6115d88482850161156a565b91505092915050565b600082825260208201905092915050565b60006115fd826112f7565b61160781856115e1565b9350611617818560208601611313565b61162081611346565b840191505092915050565b61163481611390565b82525050565b600060a082019050818103600083015261165481886115f2565b9050818103602083015261166881876115f2565b9050818103604083015261167c81866115f2565b905061168b606083018561162b565b611698608083018461162b565b9695505050505050565b600080fd5b600080fd5b6116b581611390565b81146116c057600080fd5b50565b6000813590506116d2816116ac565b92915050565b600060a082840312156116ee576116ed6116a2565b5b6116f860a06114cd565b9050600082013567ffffffffffffffff811115611718576117176116a7565b5b6117248482850161156a565b600083015250602082013567ffffffffffffffff811115611748576117476116a7565b5b6117548482850161156a565b602083015250604082013567ffffffffffffffff811115611778576117776116a7565b5b6117848482850161156a565b6040830152506060611798848285016116c3565b60608301525060806117ac848285016116c3565b60808301525092915050565b6000602082840312156117ce576117cd611459565b5b600082013567ffffffffffffffff8111156117ec576117eb61145e565b5b6117f8848285016116d8565b91505092915050565b6000806040838503121561181857611817611459565b5b600083013567ffffffffffffffff8111156118365761183561145e565b5b6118428582860161156a565b925050602083013567ffffffffffffffff8111156118635761186261145e565b5b61186f8582860161156a565b9150509250929050565b60008115159050919050565b61188e81611879565b82525050565b60006020820190506118a96000830184611885565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060a08301600083015184820360008601526118f88282611357565b915050602083015184820360208601526119128282611357565b9150506040830151848203604086015261192c8282611357565b9150506060830151611941606086018261139a565b506080830151611954608086018261139a565b508091505092915050565b600061196b83836118db565b905092915050565b6000602082019050919050565b600061198b826118af565b61199581856118ba565b9350836020820285016119a7856118cb565b8060005b858110156119e357848403895281516119c4858261195f565b94506119cf83611973565b925060208a019950506001810190506119ab565b50829750879550505050505092915050565b60006020820190508181036000830152611a0f8184611980565b905092915050565b600067ffffffffffffffff821115611a3257611a3161146d565b5b602082029050602081019050919050565b600080fd5b6000611a5b611a5684611a17565b6114cd565b90508083825260208201905060208402830185811115611a7e57611a7d611a43565b5b835b81811015611ac557803567ffffffffffffffff811115611aa357611aa2611463565b5b808601611ab089826116d8565b85526020850194505050602081019050611a80565b5050509392505050565b600082601f830112611ae457611ae3611463565b5b8135611af4848260208601611a48565b91505092915050565b600060208284031215611b1357611b12611459565b5b600082013567ffffffffffffffff811115611b3157611b3061145e565b5b611b3d84828501611acf565b91505092915050565b60008060408385031215611b5d57611b5c611459565b5b600083013567ffffffffffffffff811115611b7b57611b7a61145e565b5b611b878582860161156a565b9250506020611b98858286016116c3565b9150509250929050565b600081905092915050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b6000611be3600183611ba2565b9150611bee82611bad565b600182019050919050565b6000611c0482611bd6565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c5557607f821691505b60208210811415611c6957611c68611c0e565b5b50919050565b6000611c7a826112f7565b611c848185611ba2565b9350611c94818560208601611313565b80840191505092915050565b6000611cac8284611c6f565b915081905092915050565b6000819050919050565b6000819050919050565b6000611ce6611ce1611cdc84611cb7565b611cc1565b611390565b9050919050565b611cf681611ccb565b82525050565b6000602082019050611d116000830184611ced565b92915050565b6000819050919050565b6000611d3c611d37611d3284611d17565b611cc1565b611390565b9050919050565b611d4c81611d21565b82525050565b6000602082019050611d676000830184611d43565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dd682611390565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e0957611e08611d9c565b5b600182019050919050565b60008190508160005260206000209050919050565b60008154611e3681611c3d565b611e408186611ba2565b94506001821660008114611e5b5760018114611e6c57611e9f565b60ff19831686528186019350611e9f565b611e7585611e14565b60005b83811015611e9757815481890152600182019150602081019050611e78565b838801955050505b50505092915050565b6000611eb48284611e29565b915081905092915050565b6000611eca82611390565b9150611ed583611390565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f0a57611f09611d9c565b5b82820190509291505056fea2646970667358221220631d82c2d21ccf7743c34f0baf3b3010ef6c5dba534bf77f5627d143817aeb5964736f6c634300080a0033";

    public static final String FUNC_ASSETDETAILS = "assetDetails";

    public static final String FUNC_GETASSETDETAIL = "getAssetDetail";

    public static final String FUNC_GETLIST = "getList";

    public static final String FUNC_GETLISTBYSTATUS = "getListByStatus";

    public static final String FUNC_INSERTASSETDETAIL = "insertAssetDetail";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_UPDATE = "update";

    public static final Event ISUPDATESUCCESS_EVENT = new Event("isUpdateSuccess",
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected AssetDetailContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected AssetDetailContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected AssetDetailContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected AssetDetailContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<IsUpdateSuccessEventResponse> getIsUpdateSuccessEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ISUPDATESUCCESS_EVENT, transactionReceipt);
        ArrayList<IsUpdateSuccessEventResponse> responses = new ArrayList<IsUpdateSuccessEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            IsUpdateSuccessEventResponse typedResponse = new IsUpdateSuccessEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<IsUpdateSuccessEventResponse> isUpdateSuccessEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, IsUpdateSuccessEventResponse>() {
            @Override
            public IsUpdateSuccessEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ISUPDATESUCCESS_EVENT, log);
                IsUpdateSuccessEventResponse typedResponse = new IsUpdateSuccessEventResponse();
                typedResponse.log = log;
                typedResponse.code = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<IsUpdateSuccessEventResponse> isUpdateSuccessEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ISUPDATESUCCESS_EVENT));
        return isUpdateSuccessEventFlowable(filter);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>> assetDetails(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ASSETDETAILS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<AssetDetail> getAssetDetail() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETASSETDETAIL,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<AssetDetail>() {}));
        return executeRemoteCallSingleValueReturn(function, AssetDetail.class);
    }

    public RemoteFunctionCall<List> getList(String _assetId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLIST,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<AssetDetail>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getListByStatus(String _assetId, BigInteger _currentStatus) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETLISTBYSTATUS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_assetId),
                        new org.web3j.abi.datatypes.generated.Uint256(_currentStatus)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<AssetDetail>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> insertAssetDetail(List<AssetDetail> _assetDetailList) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INSERTASSETDETAIL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<AssetDetail>(AssetDetail.class, _assetDetailList)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> update(AssetDetail _assetDetail) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATE,
                Arrays.<Type>asList(_assetDetail),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static AssetDetailContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new AssetDetailContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static AssetDetailContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new AssetDetailContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static AssetDetailContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new AssetDetailContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static AssetDetailContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new AssetDetailContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(AssetDetailContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(AssetDetailContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(AssetDetailContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<AssetDetailContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(AssetDetailContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class AssetDetail extends DynamicStruct {
        public String assetDetailId;

        public String currentUserAccount;

        public String assetId;

        public BigInteger currentStatus;

        public BigInteger status;

        public AssetDetail(String assetDetailId, String currentUserAccount, String assetId, BigInteger currentStatus, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(assetDetailId),new org.web3j.abi.datatypes.Utf8String(currentUserAccount),new org.web3j.abi.datatypes.Utf8String(assetId),new org.web3j.abi.datatypes.generated.Uint256(currentStatus),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.assetDetailId = assetDetailId;
            this.currentUserAccount = currentUserAccount;
            this.assetId = assetId;
            this.currentStatus = currentStatus;
            this.status = status;
        }

        public AssetDetail(Utf8String assetDetailId, Utf8String currentUserAccount, Utf8String assetId, Uint256 currentStatus, Uint256 status) {
            super(assetDetailId,currentUserAccount,assetId,currentStatus,status);
            this.assetDetailId = assetDetailId.getValue();
            this.currentUserAccount = currentUserAccount.getValue();
            this.assetId = assetId.getValue();
            this.currentStatus = currentStatus.getValue();
            this.status = status.getValue();
        }
    }

    public static class IsUpdateSuccessEventResponse extends BaseEventResponse {
        public BigInteger code;
    }
}
