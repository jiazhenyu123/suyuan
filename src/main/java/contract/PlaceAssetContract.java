package contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class PlaceAssetContract extends Contract {
    public static final String BINARY = "608060405260028054905060035534801561001957600080fd5b50611966806100296000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063637bf51a11610066578063637bf51a1461014a5780637ce7f1b71461017a578063c65612da146101aa578063e31bcfca146101c8578063fd346af6146101f857610093565b806309bfe26d146100985780631f7b6d32146100c8578063465c4105146100e65780634a69a74714610116575b600080fd5b6100b260048036038101906100ad9190610f27565b610214565b6040516100bf9190610fed565b60405180910390f35b6100d06102c0565b6040516100dd919061101e565b60405180910390f35b61010060048036038101906100fb919061116e565b6102c6565b60405161010d9190611201565b60405180910390f35b610130600480360381019061012b919061121c565b6103a3565b604051610141959493929190611265565b60405180910390f35b610164600480360381019061015f919061121c565b610587565b6040516101719190611201565b60405180910390f35b610194600480360381019061018f919061121c565b6105bd565b6040516101a19190611201565b60405180910390f35b6101b26106cc565b6040516101bf91906113aa565b60405180910390f35b6101e260048036038101906101dd919061121c565b6108ca565b6040516101ef919061148e565b60405180910390f35b610212600480360381019061020d9190611680565b610c0e565b005b6002818154811061022457600080fd5b90600052602060002001600091509050805461023f906116f8565b80601f016020809104026020016040519081016040528092919081815260200182805461026b906116f8565b80156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b505050505081565b60035481565b600080839050600083905080518251146102e55760009250505061039d565b60005b8251811015610395578181815181106103045761030361172a565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106103445761034361172a565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610382576000935050505061039d565b808061038d90611788565b9150506102e8565b506001925050505b92915050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546103dc906116f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610408906116f8565b80156104555780601f1061042a57610100808354040283529160200191610455565b820191906000526020600020905b81548152906001019060200180831161043857829003601f168201915b50505050509080600101805461046a906116f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610496906116f8565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b5050505050908060020180546104f8906116f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610524906116f8565b80156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b5050505050908060030154908060040154905085565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b6000806000905060005b6003548110156106c2576106a16000600283815481106105ea576105e961172a565b5b906000526020600020016040516106019190611870565b9081526020016040518091039020600101805461061d906116f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610649906116f8565b80156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b5050505050856102c6565b156106af57600191506106c2565b80806106ba90611788565b9150506105c7565b5080915050919050565b6106d4610e0b565b60006040516106e2906118d3565b90815260200160405180910390206040518060a001604052908160008201805461070b906116f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610737906116f8565b80156107845780601f1061075957610100808354040283529160200191610784565b820191906000526020600020905b81548152906001019060200180831161076757829003601f168201915b5050505050815260200160018201805461079d906116f8565b80601f01602080910402602001604051908101604052809291908181526020018280546107c9906116f8565b80156108165780601f106107eb57610100808354040283529160200191610816565b820191906000526020600020905b8154815290600101906020018083116107f957829003601f168201915b5050505050815260200160028201805461082f906116f8565b80601f016020809104026020016040519081016040528092919081815260200182805461085b906116f8565b80156108a85780601f1061087d576101008083540402835291602001916108a8565b820191906000526020600020905b81548152906001019060200180831161088b57829003601f168201915b5050505050815260200160038201548152602001600482015481525050905090565b60606000603267ffffffffffffffff8111156108e9576108e8611043565b5b60405190808252806020026020018201604052801561091c57816020015b60608152602001906001900390816109075790505b5090506000805b600354811015610b58576001600282815481106109435761094261172a565b5b9060005260206000200160405161095a9190611870565b908152602001604051809103902060009054906101000a900460ff168015610a4e5750610a4d6000600283815481106109965761099561172a565b5b906000526020600020016040516109ad9190611870565b908152602001604051809103902060010180546109c9906116f8565b80601f01602080910402602001604051908101604052809291908181526020018280546109f5906116f8565b8015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b5050505050866102c6565b5b15610b4557600060028281548110610a6957610a6861172a565b5b90600052602060002001604051610a809190611870565b90815260200160405180910390206002018054610a9c906116f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac8906116f8565b8015610b155780601f10610aea57610100808354040283529160200191610b15565b820191906000526020600020905b815481529060010190602001808311610af857829003601f168201915b5050505050838380610b2690611788565b945081518110610b3957610b3861172a565b5b60200260200101819052505b8080610b5090611788565b915050610923565b5060008167ffffffffffffffff811115610b7557610b74611043565b5b604051908082528060200260200182016040528015610ba857816020015b6060815260200190600190039081610b935790505b50905060005b82811015610c0257838181518110610bc957610bc861172a565b5b6020026020010151828281518110610be457610be361172a565b5b60200260200101819052508080610bfa90611788565b915050610bae565b50809350505050919050565b60005b8151811015610e07576001828281518110610c2f57610c2e61172a565b5b602002602001015160000151604051610c489190611919565b908152602001604051809103902060009054906101000a900460ff16610df457818181518110610c7b57610c7a61172a565b5b60200260200101516000838381518110610c9857610c9761172a565b5b602002602001015160000151604051610cb19190611919565b90815260200160405180910390206000820151816000019080519060200190610cdb929190610e3a565b506020820151816001019080519060200190610cf8929190610e3a565b506040820151816002019080519060200190610d15929190610e3a565b506060820151816003015560808201518160040155905050600180838381518110610d4357610d4261172a565b5b602002602001015160000151604051610d5c9190611919565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506002828281518110610d9657610d9561172a565b5b602002602001015160000151908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610dda929190610e3a565b5060036000815480929190610dee90611788565b91905055505b8080610dff90611788565b915050610c11565b5050565b6040518060a0016040528060608152602001606081526020016060815260200160008152602001600081525090565b828054610e46906116f8565b90600052602060002090601f016020900481019282610e685760008555610eaf565b82601f10610e8157805160ff1916838001178555610eaf565b82800160010185558215610eaf579182015b82811115610eae578251825591602001919060010190610e93565b5b509050610ebc9190610ec0565b5090565b5b80821115610ed9576000816000905550600101610ec1565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f0481610ef1565b8114610f0f57600080fd5b50565b600081359050610f2181610efb565b92915050565b600060208284031215610f3d57610f3c610ee7565b5b6000610f4b84828501610f12565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f8e578082015181840152602081019050610f73565b83811115610f9d576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fbf82610f54565b610fc98185610f5f565b9350610fd9818560208601610f70565b610fe281610fa3565b840191505092915050565b600060208201905081810360008301526110078184610fb4565b905092915050565b61101881610ef1565b82525050565b6000602082019050611033600083018461100f565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61107b82610fa3565b810181811067ffffffffffffffff8211171561109a57611099611043565b5b80604052505050565b60006110ad610edd565b90506110b98282611072565b919050565b600067ffffffffffffffff8211156110d9576110d8611043565b5b6110e282610fa3565b9050602081019050919050565b82818337600083830152505050565b600061111161110c846110be565b6110a3565b90508281526020810184848401111561112d5761112c61103e565b5b6111388482856110ef565b509392505050565b600082601f83011261115557611154611039565b5b81356111658482602086016110fe565b91505092915050565b6000806040838503121561118557611184610ee7565b5b600083013567ffffffffffffffff8111156111a3576111a2610eec565b5b6111af85828601611140565b925050602083013567ffffffffffffffff8111156111d0576111cf610eec565b5b6111dc85828601611140565b9150509250929050565b60008115159050919050565b6111fb816111e6565b82525050565b600060208201905061121660008301846111f2565b92915050565b60006020828403121561123257611231610ee7565b5b600082013567ffffffffffffffff8111156112505761124f610eec565b5b61125c84828501611140565b91505092915050565b600060a082019050818103600083015261127f8188610fb4565b905081810360208301526112938187610fb4565b905081810360408301526112a78186610fb4565b90506112b6606083018561100f565b6112c3608083018461100f565b9695505050505050565b600082825260208201905092915050565b60006112e982610f54565b6112f381856112cd565b9350611303818560208601610f70565b61130c81610fa3565b840191505092915050565b61132081610ef1565b82525050565b600060a083016000830151848203600086015261134382826112de565b9150506020830151848203602086015261135d82826112de565b9150506040830151848203604086015261137782826112de565b915050606083015161138c6060860182611317565b50608083015161139f6080860182611317565b508091505092915050565b600060208201905081810360008301526113c48184611326565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061140483836112de565b905092915050565b6000602082019050919050565b6000611424826113cc565b61142e81856113d7565b935083602082028501611440856113e8565b8060005b8581101561147c578484038952815161145d85826113f8565b94506114688361140c565b925060208a01995050600181019050611444565b50829750879550505050505092915050565b600060208201905081810360008301526114a88184611419565b905092915050565b600067ffffffffffffffff8211156114cb576114ca611043565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600060a08284031215611501576115006114e1565b5b61150b60a06110a3565b9050600082013567ffffffffffffffff81111561152b5761152a6114e6565b5b61153784828501611140565b600083015250602082013567ffffffffffffffff81111561155b5761155a6114e6565b5b61156784828501611140565b602083015250604082013567ffffffffffffffff81111561158b5761158a6114e6565b5b61159784828501611140565b60408301525060606115ab84828501610f12565b60608301525060806115bf84828501610f12565b60808301525092915050565b60006115de6115d9846114b0565b6110a3565b90508083825260208201905060208402830185811115611601576116006114dc565b5b835b8181101561164857803567ffffffffffffffff81111561162657611625611039565b5b80860161163389826114eb565b85526020850194505050602081019050611603565b5050509392505050565b600082601f83011261166757611666611039565b5b81356116778482602086016115cb565b91505092915050565b60006020828403121561169657611695610ee7565b5b600082013567ffffffffffffffff8111156116b4576116b3610eec565b5b6116c084828501611652565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061171057607f821691505b60208210811415611724576117236116c9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179382610ef1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117c6576117c5611759565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546117fe816116f8565b61180881866117d1565b94506001821660008114611823576001811461183457611867565b60ff19831686528186019350611867565b61183d856117dc565b60005b8381101561185f57815481890152600182019150602081019050611840565b838801955050505b50505092915050565b600061187c82846117f1565b915081905092915050565b7f3100000000000000000000000000000000000000000000000000000000000000600082015250565b60006118bd6001836117d1565b91506118c882611887565b600182019050919050565b60006118de826118b0565b9150819050919050565b60006118f382610f54565b6118fd81856117d1565b935061190d818560208601610f70565b80840191505092915050565b600061192582846118e8565b91508190509291505056fea2646970667358221220a29989a8e2931ffef67bb52c9d65232a946870bf511a18f36e10b2be03baebec64736f6c634300080a0033";

    public static final String FUNC_BINDASSET = "bindAsset";

    public static final String FUNC_GETASSETIDLISTBYPLACEID = "getAssetIdListByPlaceId";

    public static final String FUNC_GETPLACEASSET = "getPlaceAsset";

    public static final String FUNC_ISEQUAL = "isEqual";

    public static final String FUNC_ISPLACEBINDASSET = "isPlaceBindAsset";

    public static final String FUNC_LENGTH = "length";

    public static final String FUNC_PLACEASSETINSERTED = "placeAssetInserted";

    public static final String FUNC_PLACEASSETKEY = "placeAssetKey";

    public static final String FUNC_PLACEASSETS = "placeAssets";

    @Deprecated
    protected PlaceAssetContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PlaceAssetContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PlaceAssetContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PlaceAssetContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> bindAsset(List<PlaceAsset> _placeAssets) {
        final Function function = new Function(
                FUNC_BINDASSET,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<PlaceAsset>(PlaceAsset.class, _placeAssets)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAssetIdListByPlaceId(String _placeId) {
        final Function function = new Function(FUNC_GETASSETIDLISTBYPLACEID,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<PlaceAsset> getPlaceAsset() {
        final Function function = new Function(FUNC_GETPLACEASSET,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<PlaceAsset>() {}));
        return executeRemoteCallSingleValueReturn(function, PlaceAsset.class);
    }

    public RemoteFunctionCall<Boolean> isEqual(String a, String b) {
        final Function function = new Function(FUNC_ISEQUAL,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(a),
                        new org.web3j.abi.datatypes.Utf8String(b)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isPlaceBindAsset(String _placeId) {
        final Function function = new Function(FUNC_ISPLACEBINDASSET,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_placeId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> length() {
        final Function function = new Function(FUNC_LENGTH,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> placeAssetInserted(String param0) {
        final Function function = new Function(FUNC_PLACEASSETINSERTED,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> placeAssetKey(BigInteger param0) {
        final Function function = new Function(FUNC_PLACEASSETKEY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>> placeAssets(String param0) {
        final Function function = new Function(FUNC_PLACEASSETS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple5<String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (BigInteger) results.get(3).getValue(),
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    @Deprecated
    public static PlaceAssetContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceAssetContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PlaceAssetContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PlaceAssetContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PlaceAssetContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PlaceAssetContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PlaceAssetContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PlaceAssetContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PlaceAssetContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PlaceAssetContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class PlaceAsset extends DynamicStruct {
        public String placeAssetId;

        public String placeId;

        public String assetId;

        public BigInteger count;

        public BigInteger status;

        public PlaceAsset(String placeAssetId, String placeId, String assetId, BigInteger count, BigInteger status) {
            super(new org.web3j.abi.datatypes.Utf8String(placeAssetId),new org.web3j.abi.datatypes.Utf8String(placeId),new org.web3j.abi.datatypes.Utf8String(assetId),new org.web3j.abi.datatypes.generated.Uint256(count),new org.web3j.abi.datatypes.generated.Uint256(status));
            this.placeAssetId = placeAssetId;
            this.placeId = placeId;
            this.assetId = assetId;
            this.count = count;
            this.status = status;
        }

        public PlaceAsset(Utf8String placeAssetId, Utf8String placeId, Utf8String assetId, Uint256 count, Uint256 status) {
            super(placeAssetId,placeId,assetId,count,status);
            this.placeAssetId = placeAssetId.getValue();
            this.placeId = placeId.getValue();
            this.assetId = assetId.getValue();
            this.count = count.getValue();
            this.status = status.getValue();
        }
    }
}
